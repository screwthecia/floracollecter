// File: js/scenes/SellerScene.js
import { ALL_FLORA_DATA } from '../FloraData.js';
import { COLLECTOR_LEVELS } from './GameScene.js';

export default class SellerScene extends Phaser.Scene {
    constructor() { super({ key: 'SellerScene' }); this.parentGameScene = null; this.playerInventory = {}; this.playerHotbar = []; this.playerCurrency = 0; this.playerLevel = 0; this.playerLevelName = ""; this.tabs = {}; this.activeTab = 'sell'; this.uiElements = []; this.scrollContainer = null; this.scrollableContentElements = []; this.statsText = null; this.panelDimensions = { x:0,y:0,width:0,height:0 }; }
    init(data) { this.parentGameScene = data.gameScene; this.playerInventory = data.inventory || {}; this.playerHotbar = data.hotbar || []; this.playerCurrency = data.playerCurrency !== undefined ? data.playerCurrency : 0; this.playerLevel = data.playerLevel !== undefined ? data.playerLevel : 0; this.playerLevelName = data.playerLevelName || "Flower Newbie I"; this.uiElements.forEach(el => el.destroy()); this.uiElements = []; this.scrollableContentElements.forEach(el => el.destroy()); this.scrollableContentElements = []; if (this.scrollContainer) this.scrollContainer.destroy(); this.scrollContainer = null; if (this.input && this.input.keyboard) { this.input.keyboard.off('keydown-ESC', this.closeSeller, this); this.input.keyboard.off('keydown-O', this.closeSeller, this); } if (this.input) this.input.off('wheel'); if (this.events) this.events.off(Phaser.Scenes.Events.SHUTDOWN, this.shutdownListeners, this); console.log(`SellerScene init. Lvl: ${this.playerLevel}(${this.playerLevelName}), Coins: ${this.playerCurrency}`); }
    create() {
        console.log("SellerScene: Create.");this.uiElements.push(this.add.rectangle(0,0,this.cameras.main.width,this.cameras.main.height,0x000000,0.7).setOrigin(0,0));
        this.panelDimensions.width=this.cameras.main.width*0.8;this.panelDimensions.height=this.cameras.main.height*0.8;this.panelDimensions.x=(this.cameras.main.width-this.panelDimensions.width)/2;this.panelDimensions.y=(this.cameras.main.height-this.panelDimensions.height)/2;
        const pR=this.add.rectangle(this.panelDimensions.x,this.panelDimensions.y,this.panelDimensions.width,this.panelDimensions.height,0x5d4037).setOrigin(0,0).setStrokeStyle(4,0x3e2723);this.uiElements.push(pR);
        const tT=this.add.text(this.panelDimensions.x+this.panelDimensions.width/2,this.panelDimensions.y+30,'Mysterious Merchant',{font:'32px Arial',fill:'#e0e0e0'}).setOrigin(0.5);this.uiElements.push(tT);
        this.statsText=this.add.text(this.panelDimensions.x+this.panelDimensions.width/2,this.panelDimensions.y+this.panelDimensions.height-30,`Coins: $${this.playerCurrency} | Lvl: ${this.playerLevelName}`,{font:'18px Arial',fill:'#f0e0d0'}).setOrigin(0.5);this.uiElements.push(this.statsText);
        this.tabs.sell=this.add.text(this.panelDimensions.x+50,this.panelDimensions.y+70,'SELL',{font:'24px Arial',fill:'#fff'}).setInteractive({useHandCursor:true}).on('pointerdown',()=>this.switchTab('sell'));this.tabs.buy=this.add.text(this.panelDimensions.x+150,this.panelDimensions.y+70,'BUY',{font:'24px Arial',fill:'#aaa'}).setInteractive({useHandCursor:true}).on('pointerdown',()=>this.switchTab('buy'));this.uiElements.push(this.tabs.sell,this.tabs.buy);
        this.switchTab(this.activeTab);
        const cB=this.add.text(this.panelDimensions.x+this.panelDimensions.width-30,this.panelDimensions.y+30,'X',{font:'28px Arial',fill:'#fff',backgroundColor:'#a00',padding:{x:8,y:3}}).setOrigin(0.5).setInteractive({useHandCursor:true});cB.on('pointerdown',()=>this.closeSeller());cB.on('pointerover',()=>cB.setBackgroundColor('#c00000'));cB.on('pointerout',()=>cB.setBackgroundColor('#8c0000'));this.uiElements.push(cB);
        this.input.keyboard.on('keydown-ESC',this.closeSeller,this);this.input.keyboard.on('keydown-O',this.closeSeller,this);this.events.on(Phaser.Scenes.Events.SHUTDOWN,this.shutdownListeners,this);
    }
    shutdownListeners(){console.log("SellerScene: shutdownListeners");if(this.input&&this.input.keyboard){this.input.keyboard.off('keydown-ESC',this.closeSeller,this);this.input.keyboard.off('keydown-O',this.closeSeller,this);}if(this.input)this.input.off('wheel');this.events.off(Phaser.Scenes.Events.SHUTDOWN,this.shutdownListeners,this);}
    switchTab(tabName){this.activeTab=tabName;this.tabs.sell.setFill(tabName==='sell'?'#fff':'#aaa').setStyle({fontStyle:tabName==='sell'?'bold':'normal'});this.tabs.buy.setFill(tabName==='buy'?'#fff':'#aaa').setStyle({fontStyle:tabName==='buy'?'bold':'normal'});this.scrollableContentElements.forEach(el=>el.destroy());this.scrollableContentElements=[];if(this.scrollContainer){this.scrollContainer.destroy();this.scrollContainer=null;}if(this.input)this.input.off('wheel');if(tabName==='sell'){this.populateSellList();}else if(tabName==='buy'){this.populateBuyList();}}
    populateSellList(){let iTD=[];for(const fId in this.playerInventory){if(this.playerInventory[fId]>0){iTD.push({floraId:fId,count:this.playerInventory[fId],from:'inventory'});}}this.playerHotbar.forEach((hBItem,idx)=>{if(hBItem&&hBItem.count>0){const exInvItm=iTD.find(itm=>itm.floraId===hBItem.floraId);if(!exInvItm){iTD.push({...hBItem,from:'hotbar',hotbarIndex:idx});}}});iTD=iTD.filter(itm=>itm.count>0);if(iTD.length===0){this.displayNoItemsMessage("Nothing to sell!","sell");return;}this.createScrollableList(iTD,'sell');}
    populateBuyList(){let iTD=[];for(const fId in ALL_FLORA_DATA){const f=ALL_FLORA_DATA[fId];if(f.levelToBuy<=this.playerLevel){iTD.push({...f,from:'sellerStock'});}}iTD.sort((a,b)=>a.levelToBuy-b.levelToBuy||a.basePrice-b.basePrice);if(iTD.length===0){this.displayNoItemsMessage("No new flowers to buy at your current level!","buy");return;}this.createScrollableList(iTD,'buy');}
    displayNoItemsMessage(msg,mode){const pX=this.panelDimensions.x,pW=this.panelDimensions.width,lAY_panel=this.panelDimensions.y+110;const noItemsTxt=this.add.text(pX+pW/2,lAY_panel+50,msg,{font:'20px Arial',fill:'#ccc'}).setOrigin(0.5);this.scrollableContentElements.push(noItemsTxt);}
    createScrollableList(items,mode){const pX=this.panelDimensions.x,pY=this.panelDimensions.y,pW=this.panelDimensions.width,pH=this.panelDimensions.height;const lAX_abs=pX+20,lAY_abs=pY+110,lAW=pW-40,lAH=pH-180;const iH=60,sp=10;this.scrollContainer=this.add.container(lAX_abs,lAY_abs);items.forEach((iD,idx)=>{const yP_rel=idx*(iH+sp);const iRC=this.add.container(0,yP_rel);const fMI=ALL_FLORA_DATA[iD.floraId]||iD;const ic=this.add.sprite(30,iH/2,fMI.imageKey).setDisplaySize(48,48).setOrigin(0.5);iRC.add(ic);let nT=fMI.name||"?";let dT="";if(mode==='sell'){const pr=fMI.basePrice||0;dT=`Count: ${iD.count} | Sell: $${pr}`;if(iD.from==='hotbar')nT+=" (H)";}else{const rLN=COLLECTOR_LEVELS[fMI.levelToBuy]?.name||`Lvl ${fMI.levelToBuy}`;dT=`Price: $${fMI.basePrice} | Req: ${rLN}`;}const nL=this.add.text(80,10,nT,{font:'16px Arial',fill:'#fff',wordWrap:{width:lAW-200}});iRC.add(nL);const dL=this.add.text(80,35,dT,{font:'14px Arial',fill:'#ccc'});iRC.add(dL);const btnX_rel=lAW-80;const btnTxt=mode==='sell'?'Sell 1':'Buy 1';const actBtn=this.add.text(btnX_rel,iH/2,btnTxt,{font:'16px Arial',fill:'#000',backgroundColor:'#4CAF50',padding:{x:10,y:5}}).setOrigin(0.5).setInteractive({useHandCursor:true});actBtn.setData('itemData',iD);actBtn.setData('masterInfo',fMI);actBtn.on('pointerdown',()=>{if(mode==='sell')this.handleSellItem(actBtn.getData('itemData').floraId,actBtn.getData('itemData').from,actBtn.getData('itemData').hotbarIndex);else this.handleBuyItem(actBtn.getData('masterInfo').id);});actBtn.on('pointerover',()=>actBtn.setBackgroundColor('#66BB6A'));actBtn.on('pointerout',()=>actBtn.setBackgroundColor('#4CAF50'));iRC.add(actBtn);this.scrollContainer.add(iRC);this.scrollableContentElements.push(iRC);});const mG=this.make.graphics();mG.fillStyle(0xffffff);mG.fillRect(lAX_abs,lAY_abs,lAW,lAH);this.scrollContainer.setMask(mG.createGeometryMask());this.uiElements.push(mG);let scrY=0;const cH=items.length*(iH+sp)-sp;if(cH>lAH){this.input.on('wheel',(ptr,gOs,dX,dY,dZ)=>{if(!this.scene.isActive()||!this.scrollContainer||!this.scrollContainer.active)return;if(ptr.x>lAX_abs&&ptr.x<lAX_abs+lAW&&ptr.y>lAY_abs&&ptr.y<lAY_abs+lAH){scrY-=dY*0.5;scrY=Phaser.Math.Clamp(scrY,-(Math.max(0,cH-lAH)),0);this.scrollContainer.y=lAY_abs+scrY;}});}}
    handleSellItem(fId,fromLoc,hbIdx=-1){if(!this.parentGameScene)return;if(this.parentGameScene.sellItemFromPlayer(fId,fromLoc,hbIdx)){this.playerCurrency=this.parentGameScene.playerCurrency;this.playerInventory={...this.parentGameScene.inventory};this.playerHotbar=[...this.parentGameScene.hotbar];this.updatePlayerStatsText();this.switchTab('sell');}else{console.log("SellerScene: Sell failed.");}}
    handleBuyItem(fIdTB){if(!this.parentGameScene)return;if(this.parentGameScene.playerBuysItem(fIdTB)){this.playerCurrency=this.parentGameScene.playerCurrency;this.playerInventory={...this.parentGameScene.inventory};this.playerHotbar=[...this.parentGameScene.hotbar];this.updatePlayerStatsText();this.switchTab('buy');}else{alert("Not enough coins or item unavailable!");}}
    updatePlayerStatsText(){const newText=`Coins: $${this.playerCurrency} | Lvl: ${this.parentGameScene?.playerLevelName||this.playerLevelName}`;if(this.statsText&&this.statsText.scene){this.statsText.setText(newText);}else{const pW=this.panelDimensions.width,pH=this.panelDimensions.height,pX=this.panelDimensions.x,pY=this.panelDimensions.y;this.statsText=this.add.text(pX+pW/2,pY+pH-30,newText,{font:'18px Arial',fill:'#f0e0d0'}).setOrigin(0.5);this.uiElements.push(this.statsText);}}
    closeSeller(){console.log("SellerScene: Closing.");if(this.input)this.input.off('wheel');if(this.parentGameScene&&typeof this.parentGameScene.sellerClosed==='function'){this.parentGameScene.sellerClosed();}this.shutdownListeners();this.scene.stop();}
}
